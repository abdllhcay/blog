{"version":3,"sources":["components/footer/footer.module.css","utils/user.js","components/header/index.js","components/footer/index.js","utils/statics.js","components/post-item/index.js","components/post-skeleton/index.js","components/bookmark-item/index.js","components/bookmark-skeleton/index.js","components/home-divider/index.js","components/home-heading/index.js","pages/home/home.view.jsx","services/firebase.js","services/post.js","services/bookmark.js","pages/home/home.jsx","services/auth.js","pages/login/login.view.jsx","pages/login/login.jsx","pages/about-me/about-me.view.jsx","pages/about-me/about-me.jsx","pages/bookmarks/bookmarks.view.jsx","pages/bookmarks/bookmarks.jsx","pages/posts/posts.view.jsx","pages/posts/posts.jsx","components/editor/index.js","pages/posts-new/posts-new.view.jsx","pages/posts-new/posts-new.jsx","components/content-box/index.js","pages/posts-detail/posts-detail.view.jsx","pages/posts-detail/posts-detail.jsx","pages/404/404.jsx","routes/private-route.js","routes/routes.js","App.js","index.js","styles/theme.js"],"names":["module","exports","removeCurrentUser","localStorage","removeItem","Header","toggleColorMode","useColorMode","direction","align","as","RouterLink","to","style","textDecoration","colorScheme","variant","getItem","Button","rightIcon","ChevronDown","onClick","aria-label","icon","Moon","Footer","className","styles","footer","BiBoltCircle","w","h","href","isExternal","monthNames","shortMonthNames","PostItem","props","post","id","size","justifyContent","width","fontSize","color","fontWeight","mr","date","toDate","getDate","getMonth","title","PostSkeleton","loading","Array","from","e","i","height","mb","BookmarkItem","d","flexShrink","ratio","src","bookmark","cover","alt","objectFit","flexGrow","link","noOfLines","excerpt","spacing","domain","Text","_id","BookmarkSkeleton","templateRows","templateColumns","gap","rowSpan","colSpan","HomeDivider","borderBottomWidth","HomeHeading","children","HomeView","posts","map","p","mt","divider","bookmarks","item","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storeNamespace","createPost","data","a","Timestamp","fromDate","Date","collection","add","getPostList","orderBy","limit","get","getPost","postId","doc","getBookmarkList","axios","headers","Authorization","Home","useState","setPosts","setBookmarks","setLoading","Promise","all","forEach","current","result","items","useEffect","getData","signin","credentials","signInWithEmailAndPassword","email","password","then","res","catch","error","LoginView","useForm","register","handleSubmit","isSubmitting","formState","maxW","onSubmit","name","type","placeholder","ref","required","isLoading","Login","toast","useToast","loggedIn","setLoggedIn","isSuccess","setItem","description","status","duration","isClosable","AboutMeView","FaLinkedin","FaGithub","FaMedium","AboutMe","BookmarksView","Bookmarks","getBookmarks","PostsView","Posts","getPosts","blockButtons","label","toolbarConfig","block","inline","blockStyleFn","contentBlock","getType","Editor","editorState","onChange","sideButtons","NewPostView","onEditorStateChange","NewPost","createEditorState","setEditorState","setPostId","content","stateToHTML","getCurrentContent","ContentBox","console","log","text","dangerouslySetInnerHTML","__html","sx","lineHeight","padding","margin","PostDetailView","getFullYear","PostDetail","setPost","match","params","exists","getPostDetail","NotFound","PrivateRoute","path","component","Routes","exact","App","theme","extendTheme","fonts","body","heading","mono","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c94f32e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3eJfN\"};","export function isLoggedIn() {\r\n  return localStorage.getItem(\"loggedIn\");\r\n}\r\n\r\nexport function removeCurrentUser() {\r\n  localStorage.removeItem(\"loggedIn\");\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Stack,\r\n  IconButton,\r\n  Spacer,\r\n  useColorMode,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuDivider,\r\n} from \"@chakra-ui/react\";\r\nimport { MoonIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { isLoggedIn, removeCurrentUser } from \"../../utils/user\";\r\n\r\nexport function Header() {\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Stack direction=\"row\" align=\"center\">\r\n      <Link as={RouterLink} to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <Button colorScheme=\"teal\" variant=\"ghost\">\r\n          abdllhcay\r\n        </Button>\r\n      </Link>\r\n      <Spacer />\r\n      <Link as={RouterLink} to=\"/posts\" style={{ textDecoration: \"none\" }}>\r\n        <Button colorScheme=\"teal\" variant=\"ghost\">\r\n          Yazılarım\r\n        </Button>\r\n      </Link>\r\n      <Link as={RouterLink} to=\"/about-me\" style={{ textDecoration: \"none\" }}>\r\n        <Button colorScheme=\"teal\" variant=\"ghost\">\r\n          Hakkımda\r\n        </Button>\r\n      </Link>\r\n      <Link as={RouterLink} to=\"/bookmarks\" style={{ textDecoration: \"none\" }}>\r\n        <Button colorScheme=\"teal\" variant=\"ghost\">\r\n          Yer İmleri\r\n        </Button>\r\n      </Link>\r\n      {isLoggedIn() ? (\r\n        <Menu>\r\n          <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n            Admin\r\n          </MenuButton>\r\n          <MenuList>\r\n            <MenuItem>\r\n              <Link\r\n                as={RouterLink}\r\n                to=\"/posts/new\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                Yeni Yazı\r\n              </Link>\r\n            </MenuItem>\r\n            <MenuDivider />\r\n            <MenuItem onClick={removeCurrentUser}>Çıkış</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n      ) : (\r\n        <Fragment></Fragment>\r\n      )}\r\n      <IconButton\r\n        onClick={toggleColorMode}\r\n        aria-label=\"Night mode\"\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        icon={<MoonIcon />}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import { Link, Icon } from \"@chakra-ui/react\";\r\nimport { BiBoltCircle } from \"react-icons/bi\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nexport function Footer() {\r\n  return (\r\n    <div className={styles.footer}>\r\n      Made with <Icon as={BiBoltCircle} w={5} h={5} />{\" \"}\r\n      <Link href=\"https://chakra-ui.com\" isExternal>\r\n        chakra-ui\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export const monthNames = [\r\n  \"Ocak\",\r\n  \"Şubat\",\r\n  \"Mart\",\r\n  \"Nisan\",\r\n  \"Mayıs\",\r\n  \"Haziran\",\r\n  \"Temmuz\",\r\n  \"Ağustos\",\r\n  \"Eylül\",\r\n  \"Ekim\",\r\n  \"Kasım\",\r\n  \"Aralık\",\r\n];\r\n\r\nexport const shortMonthNames = [\r\n  \"Oca\",\r\n  \"Şub\",\r\n  \"Mar\",\r\n  \"Nis\",\r\n  \"May\",\r\n  \"Haz\",\r\n  \"Tem\",\r\n  \"Ağu\",\r\n  \"Eyl\",\r\n  \"Eki\",\r\n  \"Kas\",\r\n  \"Ara\",\r\n];\r\n","import { Link, Button, Text } from \"@chakra-ui/react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { shortMonthNames } from \"../../utils/statics\";\r\n\r\nexport function PostItem(props) {\r\n  return (\r\n    <Link\r\n      as={RouterLink}\r\n      to={`/posts/${props.post.id}`}\r\n      style={{ textDecoration: \"none\" }}\r\n    >\r\n      <Button\r\n        size=\"lg\"\r\n        variant=\"ghost\"\r\n        justifyContent=\"flex-start\"\r\n        width=\"100%\"\r\n      >\r\n        <Text fontSize=\"sm\" color=\"gray.500\" fontWeight=\"100\" mr={4}>\r\n          {props.post.date.toDate().getDate()}{\" \"}\r\n          {shortMonthNames[props.post.date.toDate().getMonth()]}\r\n        </Text>\r\n        <Text>{props.post.title}</Text>\r\n      </Button>\r\n    </Link>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport { Skeleton } from \"@chakra-ui/react\";\r\n\r\nexport function PostSkeleton(props) {\r\n  return props.loading ? (\r\n    Array.from(Array(3), (e, i) => <Skeleton height=\"40px\" mb={4} />)\r\n  ) : (\r\n    <Fragment />\r\n  );\r\n}\r\n","import {\r\n  AspectRatio,\r\n  Image,\r\n  Wrap,\r\n  WrapItem,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport function BookmarkItem(props) {\r\n  return (\r\n    <Flex key={props.bookmark._id}>\r\n      <Box d={[\"none\", \"block\"]} mr={6} flexShrink={0} w={140}>\r\n        <AspectRatio ratio={4 / 3}>\r\n          <Image\r\n            src={props.bookmark.cover}\r\n            alt={props.bookmark.title}\r\n            objectFit=\"cover\"\r\n          />\r\n        </AspectRatio>\r\n      </Box>\r\n      <Box flexGrow={1}>\r\n        <Text as=\"h4\" fontWeight=\"bold\" size=\"sm\">\r\n          <Link href={props.bookmark.link} isExternal>\r\n            {props.bookmark.title}\r\n          </Link>\r\n        </Text>\r\n        <Text noOfLines={2}>{props.bookmark.excerpt}</Text>\r\n        <Wrap spacing={0} align=\"center\" color=\"gray.500\">\r\n          <WrapItem>\r\n            <Text>{props.bookmark.domain}</Text>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <Link as={Text}></Link>\r\n          </WrapItem>\r\n        </Wrap>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport { Skeleton, Grid, GridItem } from \"@chakra-ui/react\";\r\n\r\nexport function BookmarkSkeleton(props) {\r\n  return props.loading ? (\r\n    Array.from(Array(3), (e, i) => (\r\n      <Grid\r\n        h=\"100px\"\r\n        templateRows=\"repeat(2, 1fr)\"\r\n        templateColumns=\"repeat(3, 1fr)\"\r\n        gap={4}\r\n        mb={5}\r\n      >\r\n        <GridItem rowSpan={2}>\r\n          <Skeleton height=\"100%\" width=\"100%\" />\r\n        </GridItem>\r\n        <GridItem colSpan={2}>\r\n          <Skeleton height=\"30px\" width=\"100%\" />\r\n        </GridItem>\r\n        <GridItem colSpan={2}>\r\n          <Skeleton height=\"30px\" width=\"50%\" />\r\n        </GridItem>\r\n      </Grid>\r\n    ))\r\n  ) : (\r\n    <Fragment />\r\n  );\r\n}\r\n","import { Divider } from \"@chakra-ui/react\";\r\n\r\nexport function HomeDivider() {\r\n  return <Divider mb={3} style={{ borderBottomWidth: 5 }} />;\r\n}\r\n","import { Heading } from \"@chakra-ui/react\";\r\n\r\nexport function HomeHeading(props) {\r\n  return (\r\n    <Heading size=\"lg\" mb={3}>\r\n      {props.children}\r\n    </Heading>\r\n  );\r\n}\r\n","import { Stack, VStack, StackDivider } from \"@chakra-ui/react\";\r\nimport { PostItem } from \"../../components/post-item\";\r\nimport { PostSkeleton } from \"../../components/post-skeleton\";\r\nimport { BookmarkItem } from \"../../components/bookmark-item\";\r\nimport { BookmarkSkeleton } from \"../../components/bookmark-skeleton\";\r\nimport { HomeDivider } from \"../../components/home-divider\";\r\nimport { HomeHeading } from \"../../components/home-heading\";\r\n\r\nexport function HomeView(props) {\r\n  return (\r\n    <div>\r\n      <HomeHeading>Son Yazılar</HomeHeading>\r\n      <HomeDivider />\r\n      <Stack mb={16}>\r\n        <PostSkeleton loading={props.loading} />\r\n        {props.posts.map((p) => (\r\n          <PostItem post={p} />\r\n        ))}\r\n      </Stack>\r\n      <HomeHeading>Son Yer İmleri</HomeHeading>\r\n      <HomeDivider />\r\n      <BookmarkSkeleton loading={props.loading} />\r\n      <VStack spacing={6} mt={8} align=\"stretch\" divider={<StackDivider />}>\r\n        {props.bookmarks.map((item) => (\r\n          <BookmarkItem bookmark={item} />\r\n        ))}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storeNamespace = firebase.firestore;\r\n","import { firestore, storeNamespace } from \"./firebase\";\r\n\r\nexport async function createPost(data) {\r\n  data.date = storeNamespace.Timestamp.fromDate(new Date());\r\n  return await firestore.collection(\"posts\").add(data);\r\n}\r\n\r\nexport async function getPostList({ size } = {}) {\r\n  return await firestore\r\n    .collection(\"posts\")\r\n    .orderBy(\"date\", \"desc\")\r\n    .limit(size)\r\n    .get();\r\n}\r\n\r\nexport async function getPost(postId) {\r\n  return await firestore.collection(\"posts\").doc(postId).get();\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport async function getBookmarkList({ size } = {}) {\r\n  return await axios.get(\r\n    `https://api.raindrop.io/rest/v1/raindrops/-1?-created&&perpage=${size}`,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${process.env.REACT_APP_RAINDROP_TOKEN}`, //the token is a variable which holds the token\r\n      },\r\n    }\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HomeView } from \"./home.view\";\r\nimport { getPostList } from \"../../services/post\";\r\nimport { getBookmarkList } from \"../../services/bookmark\";\r\n\r\nexport function Home() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  async function getData() {\r\n    const [posts, bookmarks] = await Promise.all([\r\n      getPostList({ size: 3 }),\r\n      getBookmarkList({ size: 2 }),\r\n    ]);\r\n\r\n    posts.forEach((p) => {\r\n      let post = p.data();\r\n      post.id = p.id;\r\n      setPosts((current) => [...current, post]);\r\n    });\r\n\r\n    if (bookmarks.data.result) {\r\n      setBookmarks(bookmarks.data.items);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return <HomeView posts={posts} bookmarks={bookmarks} loading={loading} />;\r\n}\r\n","import { auth } from \"./firebase\";\r\n\r\nexport async function signin(credentials) {\r\n  return auth\r\n    .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n    .then((res) => true)\r\n    .catch((error) => false);\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Input, Button, Stack, Container, Heading } from \"@chakra-ui/react\";\r\n\r\nexport function LoginView(props) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n\r\n  return (\r\n    <Container maxW=\"sm\">\r\n      <Heading size=\"lg\" mb=\"5\">\r\n        Giriş\r\n      </Heading>\r\n      <form onSubmit={handleSubmit(props.onSubmit)}>\r\n        <Stack spacing={3}>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"E-posta\"\r\n            ref={register({ required: true })}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Şifre\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </Stack>\r\n\r\n        <Button\r\n          mt={4}\r\n          colorScheme=\"teal\"\r\n          isLoading={isSubmitting}\r\n          type=\"submit\"\r\n        >\r\n          Gönder\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signin } from \"../../services/auth\";\r\nimport { LoginView } from \"./login.view\";\r\n\r\nexport function Login() {\r\n  const toast = useToast();\r\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\r\n\r\n  async function onSubmit(data) {\r\n    const isSuccess = await signin(data);\r\n\r\n    isSuccess\r\n      ? localStorage.setItem(\"loggedIn\", isSuccess)\r\n      : toast({\r\n          description: \"Hatalı kullanıcı adı veya şifre\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n\r\n    setLoggedIn(isSuccess);\r\n  }\r\n\r\n  return loggedIn ? <Redirect to=\"/\" /> : <LoginView onSubmit={onSubmit} />;\r\n}\r\n","import { IconButton, Link, Icon, Stack } from \"@chakra-ui/react\";\r\nimport { FaLinkedin, FaGithub, FaMedium } from \"react-icons/fa\";\r\n\r\nexport function AboutMeView() {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Merhaba, ben Abdullah. Kişisel makalelerimi yayınladığım ve biraz da\r\n        ondan bundan bahsettiğim bloguma hoşgeldiniz. Maksat insanlara bir\r\n        faydamız dokunsun ;)\r\n      </p>\r\n      <Stack direction=\"row\" mt={5}>\r\n        <Link href=\"https://www.linkedin.com/in/abdullahcay/\" isExternal>\r\n          <IconButton\r\n            colorScheme=\"teal\"\r\n            variant=\"ghost\"\r\n            icon={<Icon as={FaLinkedin} w={8} h={8} />}\r\n          />\r\n        </Link>\r\n        <Link href=\"https://github.com/abdllhcay\" isExternal>\r\n          <IconButton\r\n            colorScheme=\"teal\"\r\n            variant=\"ghost\"\r\n            icon={<Icon as={FaGithub} w={8} h={8} />}\r\n          />\r\n        </Link>\r\n        <Link href=\"https://medium.com/@abdllhcay\" isExternal>\r\n          <IconButton\r\n            colorScheme=\"teal\"\r\n            variant=\"ghost\"\r\n            icon={<Icon as={FaMedium} w={8} h={8} />}\r\n          />\r\n        </Link>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import { AboutMeView } from \"./about-me.view\";\r\n\r\nexport function AboutMe() {\r\n  return <AboutMeView />;\r\n}\r\n","import React from \"react\";\r\nimport { StackDivider, VStack } from \"@chakra-ui/react\";\r\nimport { BookmarkItem } from \"../../components/bookmark-item\";\r\nimport { BookmarkSkeleton } from \"../../components/bookmark-skeleton\";\r\n\r\nexport function BookmarksView(props) {\r\n  return (\r\n    <div>\r\n      <BookmarkSkeleton loading={props.loading} />\r\n      <VStack mt={20} spacing={6} align=\"stretch\" divider={<StackDivider />}>\r\n        {props.bookmarks.map((item) => (\r\n          <BookmarkItem bookmark={item} />\r\n        ))}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BookmarksView } from \"./bookmarks.view\";\r\nimport { getBookmarkList } from \"../../services/bookmark\";\r\n\r\nexport function Bookmarks() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getBookmarks();\r\n  }, []);\r\n\r\n  async function getBookmarks() {\r\n    const res = await getBookmarkList();\r\n\r\n    if (res.data.result) {\r\n      setBookmarks(res.data.items);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return <BookmarksView bookmarks={bookmarks} loading={loading} />;\r\n}\r\n","import { Stack } from \"@chakra-ui/react\";\r\nimport { PostItem } from \"../../components/post-item\";\r\nimport { PostSkeleton } from \"../../components/post-skeleton\";\r\n\r\nexport function PostsView(props) {\r\n  return (\r\n    <div>\r\n      <Stack>\r\n        <PostSkeleton loading={props.loading} />\r\n        {props.posts.map((p) => (\r\n          <PostItem post={p} />\r\n        ))}\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PostsView } from \"./posts.view\";\r\nimport { getPostList } from \"../../services/post\";\r\n\r\nexport function Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  async function getPosts() {\r\n    const posts = await getPostList();\r\n    posts.forEach((p) => {\r\n      let post = p.data();\r\n      post.id = p.id;\r\n      setPosts((current) => [...current, post]);\r\n    });\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return <PostsView posts={posts} loading={loading} />;\r\n}\r\n","import { Editor as DraftEditor } from \"medium-draft\";\r\nimport \"medium-draft/lib/index.css\";\r\n\r\nconst blockButtons = [\r\n  {\r\n    label: \"H1\",\r\n    style: \"header-one\",\r\n    description: \"Heading 1\",\r\n  },\r\n  {\r\n    label: \"H2\",\r\n    style: \"header-two\",\r\n    description: \"Heading 2\",\r\n  },\r\n  {\r\n    label: \"</>\",\r\n    style: \"code-block\",\r\n    description: \"Code Block\",\r\n  },\r\n  {\r\n    label: \"●\",\r\n    style: \"unordered-list-item\",\r\n    description: \"Unordered List\",\r\n  },\r\n  {\r\n    label: \"1.\",\r\n    style: \"ordered-list-item\",\r\n    description: \"Ordered List\",\r\n  },\r\n];\r\n\r\nconst toolbarConfig = {\r\n  block: [\r\n    \"header-one\",\r\n    \"header-two\",\r\n    \"code-block\",\r\n    \"unordered-list-item\",\r\n    \"ordered-list-item\",\r\n  ],\r\n  inline: [\"BOLD\", \"ITALIC\", \"UNDERLINE\", \"hyperlink\"],\r\n};\r\n\r\nfunction blockStyleFn(contentBlock) {\r\n  const type = contentBlock.getType();\r\n  if (type === \"header-one\") {\r\n    return \"editor-header-one\";\r\n  }\r\n\r\n  if (type === \"header-two\") {\r\n    return \"editor-header-two\";\r\n  }\r\n}\r\n\r\nexport function Editor(props) {\r\n  return (\r\n    <DraftEditor\r\n      editorState={props.editorState}\r\n      onChange={props.onChange}\r\n      sideButtons={[]}\r\n      toolbarConfig={toolbarConfig}\r\n      blockButtons={blockButtons}\r\n      blockStyleFn={blockStyleFn}\r\n      placeholder=\"İçerik\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Input, Button, Stack } from \"@chakra-ui/react\";\r\nimport { Editor } from \"../../components/editor\";\r\n\r\nexport function NewPostView(props) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(props.onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <Input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Başlık\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <Editor\r\n          editorState={props.editorState}\r\n          onChange={props.onEditorStateChange}\r\n        />\r\n      </Stack>\r\n\r\n      <Button mt={4} colorScheme=\"teal\" isLoading={isSubmitting} type=\"submit\">\r\n        Kaydet\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createPost } from \"../../services/post\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { NewPostView } from \"./posts-new.view\";\r\nimport { createEditorState } from \"medium-draft\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\n\r\nexport function NewPost() {\r\n  const [editorState, setEditorState] = useState(createEditorState());\r\n  const [postId, setPostId] = useState(null);\r\n\r\n  async function onSubmit(data) {\r\n    data.content = stateToHTML(editorState.getCurrentContent());\r\n    var res = await createPost(data);\r\n    if (res.id) {\r\n      setPostId(res.id);\r\n    }\r\n  }\r\n\r\n  function onEditorStateChange(editorState) {\r\n    setEditorState(editorState);\r\n  }\r\n\r\n  return postId ? (\r\n    <Redirect to={`/posts/${postId}`} />\r\n  ) : (\r\n    <NewPostView\r\n      onSubmit={onSubmit}\r\n      onEditorStateChange={onEditorStateChange}\r\n      editorState={editorState}\r\n    />\r\n  );\r\n}\r\n","import { Box } from \"@chakra-ui/react\";\r\n\r\nexport function ContentBox(props) {\r\n  console.log(props.text);\r\n  return (\r\n    <Box\r\n      dangerouslySetInnerHTML={{\r\n        __html: props.text,\r\n      }}\r\n      sx={{\r\n        \"& h1\": {\r\n          fontSize: \"1.875rem\",\r\n          lineHeight: 1.2,\r\n          fontWeight: 700,\r\n        },\r\n        \"& h2\": {\r\n          fontSize: \"1.25rem\",\r\n          lineHeight: 1.2,\r\n          fontWeight: 700,\r\n        },\r\n        // \"& code\": {\r\n        //   fontFamily: \"Consolas, 'Liberation Mono', Menlo, Courier, monospace\",\r\n        //   fontSize: \"0.9em\",\r\n        //   color: \"#555555\",\r\n        //   padding: \"1px 3px\",\r\n        //   margin: \"4px 0px\",\r\n        //   backgroundColor: \"rgb(252, 252, 252)\",\r\n        //   borderStyle: \"solid\",\r\n        //   borderWidth: \"1px\",\r\n        //   borderRadius: \"3px\",\r\n        //   borderColor:\r\n        //     \"rgb(204, 204, 204) rgb(204, 204, 204) rgb(187, 187, 187)\",\r\n        //   boxShadow: \"rgb(187, 187, 187) 0px -1px 0px inset\",\r\n        // },\r\n        \"& code\": {\r\n          padding: \"1px 3px\",\r\n          margin: \"4px 0px\",\r\n        },\r\n      }}\r\n    ></Box>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Heading, Text, Skeleton } from \"@chakra-ui/react\";\r\nimport { ContentBox } from \"../../components/content-box\";\r\nimport { monthNames } from \"../../utils/statics\";\r\n\r\nexport function PostDetailView(props) {\r\n  const date = props.post.date?.toDate();\r\n  return (\r\n    <div>\r\n      {props.loading ? (\r\n        <Fragment>\r\n          <Skeleton height=\"40px\" mb={4} />\r\n          <Skeleton height=\"20px\" mb={4} width=\"30%\" />\r\n          <Skeleton height=\"150px\" mb={4} />\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <Heading size=\"lg\">{props.post.title}</Heading>\r\n          <Text fontSize=\"sm\" color=\"gray.500\">\r\n            {date?.getDate()} {monthNames[date?.getMonth()]}{\" \"}\r\n            {date?.getFullYear()}\r\n          </Text>\r\n          <Text mt={5}>\r\n            <ContentBox text={props.post.content} />\r\n          </Text>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getPost } from \"../../services/post\";\r\nimport { PostDetailView } from \"./posts-detail.view\";\r\n\r\nexport function PostDetail(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [post, setPost] = useState({});\r\n  const postId = props.match.params.postId;\r\n\r\n  useEffect(() => {\r\n    getPostDetail(postId);\r\n  }, [postId]);\r\n\r\n  async function getPostDetail(postId) {\r\n    const post = await getPost(postId);\r\n    if (post.exists) {\r\n      setPost(post.data());\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return <PostDetailView post={post} loading={loading} />;\r\n}\r\n","export function NotFound() {\r\n  return <div>404 not found</div>;\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport function PrivateRoute(props) {\r\n  const loggedIn = localStorage.getItem(\"loggedIn\");\r\n\r\n  return loggedIn ? (\r\n    <Route path={props.path} component={props.component} />\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport { Home } from \"../pages/home\";\r\nimport { Login } from \"../pages/login\";\r\nimport { AboutMe } from \"../pages/about-me\";\r\nimport { Bookmarks } from \"../pages/bookmarks\";\r\nimport { Posts } from \"../pages/posts\";\r\nimport { NewPost } from \"../pages/posts-new\";\r\nimport { PostDetail } from \"../pages/posts-detail\";\r\nimport { NotFound } from \"../pages/404\";\r\nimport { PrivateRoute } from \"./private-route\";\r\n\r\nexport function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={Home} exact />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/about-me\" component={AboutMe} />\r\n      <Route path=\"/bookmarks\" component={Bookmarks} />\r\n      <Route path=\"/posts\" component={Posts} exact />\r\n      <PrivateRoute path=\"/posts/new\" component={NewPost} />\r\n      <Route path=\"/posts/:postId\" component={PostDetail} />\r\n      <Route component={NotFound}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import { Container } from \"@chakra-ui/react\";\nimport { Header } from \"./components/header\";\nimport { Footer } from \"./components/footer\";\nimport { Routes } from \"./routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Container maxW=\"2xl\" mt={5}>\n        <Header />\n      </Container>\n      <Container maxW=\"4xl\" mt={20}>\n        <Routes />\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport customTheme from \"./styles/theme\";\n\nconst theme = extendTheme(customTheme);\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","export default {\r\n  fonts: {\r\n    body: \"'Inter', sans-serif\",\r\n    heading: \"'Inter', sans-serif\",\r\n    mono: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\r\n  },\r\n};\r\n"],"sourceRoot":""}